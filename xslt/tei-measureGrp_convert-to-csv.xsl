<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:tss="http://www.thirdstreetsoftware.com/SenteXML-1.0" 
    xmlns:tei="http://www.tei-c.org/ns/1.0" 
    xmlns:html="http://www.w3.org/1999/xhtml"
    exclude-result-prefixes="xs"
    version="2.0">
    
    <xsl:output method="xml" indent="yes" encoding="UTF-8" omit-xml-declaration="no" name="xml"/>
    <xsl:output method="text" indent="yes" encoding="UTF-8" omit-xml-declaration="yes" name="text"/>
    
    <!-- this stylesheet converts <tei:measureGrp> into lines of CSV -->
    <!--
        - The input are <tei:measureGrp> as generated by tei-measure_nomalize.xsl. They look like this:
        <tei:measureGrp location="BayrÅ«t" source="04E49609-CA9D-4187-8C64-05C81D64A72D" when="1878-10-17">
        
        - Commonly they have only two <tei:measure> children. The maximum is three <tei:measure> children with two of them expressing a price range.
        The <tei:measure> children look like this:
        <tei:measure change="#normalized" commodity="wheat" location="Damascus" quantity="1" quantityOrig="2" type="volume" unit="kile" unitOrig="madd" when="1910-12-07">
    -->
    
    <xsl:param name="p_separator" select="','"/>
    <xsl:param name="p_separator-escape" select="';'"/>
    <xsl:param name="p_quote-escape" select="'&quot;&quot;'"/>
    <xsl:variable name="v_new-line" select="'&#x0A;'"/>
    
    <xsl:template match="/">
        <xsl:apply-templates select="descendant::tei:measureGrp" mode="m_tei-to-csv"/>
    </xsl:template>
    
    <!-- currently this nested <tei:measureGrp>s -->
    <!-- one line for each normalized tei:measureGrp:
        1. column: should information on dates
        2. column: UUID of the source reference
        3. column: full copy of the original data
        4. column and following: normalized CSV data -->
    <xsl:variable name="v_csv-head">
<!--        <xsl:text>date, source-uuid, orig-data, commodity-1, quantity-1, unit-1, commodity-2, quantity-2, unit-2,</xsl:text><xsl:copy-of select="$v_new-line"/>-->
        <!-- data based on the <tei:measureGrp> -->
        <xsl:text>date, duration, location, source, orig-data, </xsl:text>
        <!-- data based on the <tei:measure> children -->
        <xsl:text>commodity-1, quantity-1, unit-1, commodity-2, quantity-2, unit-2, commodity-3, quantity-3, unit-3,</xsl:text><xsl:copy-of select="$v_new-line"/>
    </xsl:variable>
    <xsl:template match="tei:measureGrp" mode="m_tei-to-csv" priority="3">
        <!-- date -->
        <xsl:value-of select="@when"/><xsl:value-of select="$p_separator"/>
        <!-- duration -->
        <xsl:value-of select="@dur"/><xsl:value-of select="$p_separator"/>
        <!-- location -->
        <xsl:value-of select="@location"/><xsl:value-of select="$p_separator"/>
        <!-- source information -->
        <xsl:value-of select="@source"/><xsl:value-of select="$p_separator"/>
        <!-- full copy of the original data. Should be quoted -->
        <xsl:text>"</xsl:text><xsl:value-of select="replace(replace(normalize-space(.),$p_separator,$p_separator-escape),'&quot;',$p_quote-escape)" disable-output-escaping="no"/><xsl:text>"</xsl:text><xsl:value-of select="$p_separator"/>
        <!-- data from the <tei:measure> children -->
        <xsl:apply-templates select="tei:measure[not(@commodity='currency')]" mode="m_tei-to-csv"/>
        <xsl:apply-templates select="tei:measure[@commodity='currency']" mode="m_tei-to-csv">
            <xsl:sort select="@quantity"/>
        </xsl:apply-templates>
        <xsl:value-of select="$v_new-line"/>
    </xsl:template>
    
    <xsl:template match="tei:measure" mode="m_tei-to-csv" priority="3">
        <xsl:value-of select="@commodity"/><xsl:value-of select="$p_separator"/>
        <xsl:value-of select="@quantity"/><xsl:value-of select="$p_separator"/>
        <xsl:value-of select="@unit"/><xsl:value-of select="$p_separator"/>
        <!-- since the output re-sorts the child elements, following-sibling:: is not the correct axis -->
                <!--<xsl:if test="count(parent::node()/tei:measure) &gt; 1">
        <xsl:value-of select="$p_separator"/>
        </xsl:if>-->
    </xsl:template>
</xsl:stylesheet>